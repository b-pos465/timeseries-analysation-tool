"use strict";angular.module("TimeseriesAnalysationTool",[]),angular.module("TimeseriesAnalysationTool").directive("threeDimChart",["DividingService","AggregatingService","TimeseriesUtil","$timeout","$filter",function(e,t,n,i,s){return{templateUrl:"app/chart/three-dim-chart.html",restrict:"E",scope:{externData:"=data",externOptions:"=options"},link:function(i){function a(e){for(var t=1;i.possibleResolutions[t].value<=e.stepLength;)t++;return t--,i.possibleResolutions[t]}function r(){l.scene.yaxis.title=l.scene.xaxis.title=""}i.formatNumber=function(e){return s("number")(e,2)},i.range=[0,1],i.currentMin=i.range[0],i.currentMax=i.range[1],i.possibleColorscales=["Greys","YIGnBu","Greens","YIOrRd","Bluered","RdBu","Reds","Blues","Picnic","Rainbow","Portland","Jet","Hot","Blackbody","Earth","Electric","Viridis"],i.possibleResolutions=e.possibleResolutions,i.possibleAggregations=t.possibleAggregations;var l={title:null,autosize:!1,width:$(document).width()/2,height:$(document).width()/2,margin:{l:65,r:50,b:65,t:90},scene:{zaxis:{title:"Wert"},yaxis:{},xaxis:{}}};i.$watch("externOptions",function(e){e&&i.possibleColorscales.indexOf(e.initialcolorscale)!==-1&&(i.initialcolorscale=e.initialcolorscale)}),i.$watch("externData",function(e){if(e){if(!angular.isArray(e.values))throw"Expected an array in `values` but didn't find it!";i.rawData=e.values,i.timeseries=n.newTimeseries(e.startDate,e.stepLength,i.rawData),i.range[0]=Math.min.apply(Math,i.rawData),i.range[1]=Math.max.apply(Math,i.rawData),i.currentMin=i.range[0],i.currentMax=i.range[1],i.options={yaxis:i.possibleResolutions[0].text}}}),i.$watch("options",function(e,t){var s=void 0,o=void 0,u=void 0;if(e){if(i.timeseries=n.newTimeseries(i.externData.startDate,i.externData.stepLength,i.rawData),r(),t&&e.yaxis!==t.yaxis&&(e.xaxis=null),e.yaxis)for(var c=0;c<i.possibleResolutions.length;c++)i.possibleResolutions[c].text===e.yaxis&&(s=i.possibleResolutions[c]);if(e.xaxis&&e.agg){for(c=0;c<i.possibleAggregations.length;c++)i.possibleAggregations[c].text===e.agg&&(o=i.possibleAggregations[c]);for(c=0;c<i.possibleResolutions.length;c++)i.possibleResolutions[c].text===e.xaxis&&(u=i.possibleResolutions[c])}if(s&&u&&o)n.divide(i.timeseries,s.calc),n.divide(i.timeseries,u.calc),n.aggregate(i.timeseries,o.calc),l.scene.xaxis.title=u.text+" "+i.options.agg,l.scene.yaxis.title=s.text;else if(s){n.divide(i.timeseries,s.calc,s);var g=a(i.timeseries);l.scene.yaxis.title=s.text,l.scene.xaxis.title="1 ≡ "+i.timeseries.stepLength/g.value+" "+g.text,"Original"===s.text&&(l.scene.yaxis.title=s.text+" ≡ "+i.timeseries.stepLength/g.value+" "+g.text)}i.refresh()}},!0),i.resetSelection=function(){i.options.yaxis="Original",i.options.xaxis=void 0,i.options.agg=void 0},i.calculateRange=function(e){if(angular.isArray(e[0])){for(var t=[],n=[],s=0;s<e.length;s++)t.push(Math.min.apply(Math,e[s])),n.push(Math.max.apply(Math,e[s]));i.range[0]=Math.min.apply(Math,t),i.range[1]=Math.max.apply(Math,n)}else i.range[0]=Math.min.apply(Math,e),i.range[1]=Math.max.apply(Math,e);i.currentMin=i.range[0],i.currentMax=i.range[1]},i.refresh=function(){i.calculateRange(i.timeseries.values),Plotly.newPlot("plotly",[{z:n.getRenderableValues(i.timeseries),type:"surface"}],l),i.initialcolorscale&&(i.setColorscale(i.initialcolorscale),i.initialcolorscale=null)},i.getYAxisResolutionIndex=function(){if(!i.options||!i.options.yaxis)return-1;for(var e=0;e<i.possibleResolutions.length;e++)if(i.possibleResolutions[e].text===i.options.yaxis)return e},i.setMin=function(e){try{Plotly.restyle("plotly",{cmin:e})}catch(e){console.log("Plotly wurde noch nicht initialisiert.")}},i.setMax=function(e){try{Plotly.restyle("plotly",{cmax:e})}catch(e){console.log("Plotly wurde noch nicht initialisiert.")}},i.setColorscale=function(e){try{Plotly.restyle("plotly",{colorscale:e})}catch(e){console.log("Plotly wurde noch nicht initialisiert.")}}}}}]),angular.module("TimeseriesAnalysationTool").run(["$templateCache",function(e){e.put("app/chart/three-dim-chart.html",'<div class="row">\n    <div id="plotly" class="col-md-6"></div>\n    <div class="col-md-2 col-md-offset-2">\n        <div class="form-group">\n            <label for="sel1">Y-Achsen Auflösung:</label>\n            <select class="form-control" id="sel1" ng-model="options.yaxis" ng-disabled="options.xaxis">\n                <option ng-repeat="res in possibleResolutions" ng-disabled="timeseries.stepLength > res.value && res.value"\n                        ng-value="res.text">{{res.text}}</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label for="sel2">X-Achsen Aggregation:</label>\n            <select class="form-control" id="sel2" ng-model="options.xaxis">\n                <option ng-repeat="res in possibleResolutions" ng-disabled="timeseries.stepLength > res.value || $index > getYAxisResolutionIndex()"\n                        ng-value="res.text">{{res.text}}</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label for="sel3">Aggregationstyp:</label>\n            <select class="form-control" id="sel3" ng-model="options.agg" ng-disabled="!options.xaxis">\n                <option ng-repeat="agg in possibleAggregations">{{agg.text}}</option>\n            </select>\n        </div>\n        <button class="btn btn-default" ng-click="resetSelection()">\n            Auswahl zurücksetzen\n        </button>\n        <hr ng-if="!externOptions || externOptions.colorscale || externOptions.colorrange">\n        <div class="form-group" ng-if="!externOptions || externOptions.colorscale">\n            <label for="color">Farbskala:</label>\n            <select class="form-control" id="color" ng-model="color" ng-change="setColorscale(color)">\n                <option ng-repeat="c in possibleColorscales">{{c}}</option>\n            </select>\n        </div>\n        <div ng-if="!externOptions || externOptions.colorrange">\n            <label for="slider1" >Minimum: <i style="font-weight: normal">{{formatNumber(currentMin)}}</i>\n                <input id="slider1" type="range" min="{{range[0]}}" max="{{currentMax}}" step="{{(currentMax - range[0]) / 100}}"\n                       ng-model="currentMin"\n                       style="width:300px"\n                       ng-change="setMin(currentMin)">\n            </label>\n\n            <label for="slider2">Maximum: <i style="font-weight: normal">{{formatNumber(currentMax)}}</i>\n                <input id="slider2" type="range" min="{{currentMin}}" max="{{range[1]}}" step="{{(range[1] - currentMin) / 100}}"\n                       ng-model="currentMax"\n                       style="width:300px"\n                       ng-change="setMax(currentMax)">\n            </label>\n        </div>\n    </div>\n</div>\n\n\n\n')}]),angular.module("TimeseriesAnalysationTool").service("AggregatingService",function(){this.sum=function(e){return e.reduce(function(e,t){return e+t})};var e=this.sum;this.avg=function(t){return e(t)/t.length},this.max=function(e){for(var t=e[0],n=0;n<e.length;n++)e[n]>t&&(t=e[n]);return t},this.min=function(e){for(var t=e[0],n=0;n<e.length;n++)e[n]<t&&(t=e[n]);return t};var t=this;return this.possibleAggregations=[{text:"Summe",calc:t.sum},{text:"Durchschnitt",calc:t.avg},{text:"Maximum",calc:t.max},{text:"Minimum",calc:t.min}],this}),angular.module("TimeseriesAnalysationTool").service("DividingService",function(){function e(e,t,n){var i=[];i.push(e.slice(0,t-n));for(var s=t-n;s<e.length;s+=t)s+t<=e.length?i.push(e.slice(s,s+t)):i.push(e.slice(s));return i}var t=1e3,n=60*t,i=60*n,s=24*i,a=7*s,r=this;return this.fillValues=function(e,t,n,i){var s=n/t-e[0].length;if(0!=s)for(var a=0;a<s;a++)e[0].push(i);if(s=n/t-e[e.length-1].length,0!=s)for(a=0;a<s;a++)e[e.length-1].push(i);return 1===e.length?[e[0],e[0]]:e},this.getSeconds=function(n,i,s){var a=s.getTime()%t;return angular.isArray(n)?e(n,t/i,a):[n]},this.getMinutes=function(t,i,s){var a=s.getTime()%n;return console.log(t,a,n/i),angular.isArray(t)?e(t,n/i,a):[t]},this.getHours=function(t,n,s){var a=s.getTime()%i;return angular.isArray(t)?e(t,i/n,a):[t]},this.getDays=function(t,n,i){var a=i.getTime()%s;return e(t,s/n,a)},this.getWeeks=function(t,n,i){var s=i.getTime()%a;return e(t,a/n,s)},this.possibleResolutions=[{text:"Original",value:null,calc:function(e){return _.map(e,function(e){return[e]})}},{text:"Sekunde/n",value:t,calc:r.getSeconds},{text:"Minute/n",value:n,calc:r.getMinutes},{text:"Stunde/n",value:i,calc:r.getHours},{text:"Tag/e",value:s,calc:r.getDays},{text:"Woche/n",value:a,calc:r.getWeeks}],this}),angular.module("TimeseriesAnalysationTool").service("TimeseriesUtil",function(){return this.newTimeseries=function(e,t,n){return{startDate:e,stepLength:t,values:n,depth:2}},this.divide=function(e,t){var n=this.funcMostInnerArrays(e.values,e.values,t,0,!1,e);angular.isDefined(n)&&(e.depth++,e.values=n)},this.getRenderableValues=function(e){if(e.values&&1===e.values[0].length){for(var t=angular.copy(e.values),n=0;n<e.values.length;n++)t[n].push(t[n][0]);return t}return e.values&&1===e.values.length?(t=angular.copy(e.values),t.push(t[0]),t):e.values},this.aggregate=function(e,t){var n=this.funcMostInnerArrays(e.values,e.values,t,0,!0,e);angular.isDefined(n)&&(e.depth--,e.values=n)},this.funcMostInnerArrays=function(e,t,n,i,s,a){if(angular.isArray(t)&&!angular.isArray(t[0])){var r=a.stepLength;if(s&&(a.stepLength*=t.length),e===t)return n(t,r,a.startDate);e[i]=n(t,r,a.startDate)}else for(var l=0;l<t.length;l++)this.funcMostInnerArrays(t,t[l],n,l,s,a)},this});